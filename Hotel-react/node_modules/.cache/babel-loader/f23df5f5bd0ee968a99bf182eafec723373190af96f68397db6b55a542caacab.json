{"ast":null,"code":"var _jsxFileName = \"/Users/gimjuyeong/HotelProject/HotelProject/Hotel-react/src/basket/BasketByUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasketShowOne = props => {\n  _s();\n  // 우선순위: props로 받은 userid가 있으면 사용하고, 없으면 useParams로 받은 userid를 사용\n  const {\n    userid: paramUserId\n  } = useParams(); // URL 파라미터로 받은 userid\n  const userid = props.userid || paramUserId; // props로 받은 userid가 우선\n\n  const [baskets, setBaskets] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // console.log(\"선택한 hotelid: \",userid);\n  useEffect(() => {\n    const fetchBasket = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/user/basket/${userid}`);\n        if (!response.ok) {\n          throw new Error('네트워크 응답이 올바르지 않습니다.');\n        }\n        const data = await response.json();\n        setBaskets(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBasket();\n  }, [userid]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\uC624\\uB958: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: baskets.map((basket, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD638\\uD154 : \", basket.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD310\\uB9E4\\uC790ID: \", basket.sellerId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uAC00\\uACA9: \", basket.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/`,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, basket.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(BasketShowOne, \"uSym9J2+BZjnmHN1ZQYNCPqhvCE=\", false, function () {\n  return [useParams];\n});\n_c = BasketShowOne;\nexport default BasketShowOne;\nvar _c;\n$RefreshReg$(_c, \"BasketShowOne\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","jsxDEV","_jsxDEV","BasketShowOne","props","_s","userid","paramUserId","baskets","setBaskets","loading","setLoading","error","setError","fetchBasket","response","fetch","ok","Error","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","basket","index","name","sellerId","price","to","id","_c","$RefreshReg$"],"sources":["/Users/gimjuyeong/HotelProject/HotelProject/Hotel-react/src/basket/BasketByUser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Link, useParams} from 'react-router-dom';\n\nconst BasketShowOne = (props) => {\n    // 우선순위: props로 받은 userid가 있으면 사용하고, 없으면 useParams로 받은 userid를 사용\n    const { userid: paramUserId } = useParams(); // URL 파라미터로 받은 userid\n    const userid = props.userid || paramUserId; // props로 받은 userid가 우선\n\n    const [baskets, setBaskets] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // console.log(\"선택한 hotelid: \",userid);\n    useEffect(() => {\n        const fetchBasket = async () => {\n            try {\n                const response = await fetch(`http://localhost:8080/user/basket/${userid}`);\n                if (!response.ok) {\n                    throw new Error('네트워크 응답이 올바르지 않습니다.');\n                }\n                const data = await response.json();\n                setBaskets(data);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchBasket();\n    }, [userid]);\n\n    if (loading) return <p>로딩 중...</p>;\n    if (error) return <p>오류: {error}</p>;\n\n    return (\n        <div>\n            <h1>장바구니</h1>\n            <ul>\n                {baskets.map((basket, index) => (\n                    <li key={basket.id}>\n                        <p>호텔 : {basket.name}</p>\n                        <p>판매자ID: {basket.sellerId}</p>\n                        <p>가격: {basket.price}</p>\n                        <Link to={`/`}>삭제</Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default BasketShowOne;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}