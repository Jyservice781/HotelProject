{"ast":null,"code":"var _jsxFileName = \"/Users/gimjuyeong/HotelProject/HotelProject/Hotel-react/src/component/Nav.js\",\n  _s = $RefreshSig$();\nimport { Button, Stack } from \"react-bootstrap\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DETAIL_NAV = [{\n  idx: 0,\n  name: '호텔상품'\n}, {\n  idx: 1,\n  name: '인기상품'\n}];\nlet Nav = ({\n  scrollRef\n}) => {\n  _s();\n  const [navIndex, setNavIndex] = useState(null);\n  const navRef = useRef([]);\n  useEffect(() => {\n    var _scrollRef$current$na;\n    // { behavior: 'smooth' } 속성을 주면 스크롤이 스르륵~ 올라가거나 내려가면서 이동하고, 없으면 아무 애니메이션 없이 바로 목적지를 보여준다.\n    (_scrollRef$current$na = scrollRef.current[navIndex]) === null || _scrollRef$current$na === void 0 ? void 0 : _scrollRef$current$na.scrollIntoView({\n      behavior: 'smooth'\n    });\n    setNavIndex(null);\n  }, [scrollRef, navIndex]);\n\n  // 현재 스크롤 위치에 따라 NavBar 버튼 스타일이 바뀌도록 클래스명을 지정한다.\n  useEffect(() => {\n    const changeNavBtnStyle = () => {\n      scrollRef.current.forEach((ref, idx) => {\n        if (ref.offsetTop - 180 < window.scrollY) {\n          navRef.current.forEach(ref => {\n            ref.className = ref.className.replace(' active', '');\n          });\n          navRef.current[idx].className += ' active';\n        }\n      });\n    };\n    window.addEventListener('scroll', changeNavBtnStyle);\n    return () => {\n      window.removeEventListener('scroll', changeNavBtnStyle);\n    };\n  }, [scrollRef]);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: DETAIL_NAV.map(({\n      idx,\n      name\n    }) => /*#__PURE__*/_jsxDEV(Nav, {\n      ref: ref => navRef.current[idx] = ref,\n      onClick: () => {\n        setNavIndex(idx);\n      },\n      children: name\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Nav, \"d37m4t0xwqP/XXzpbA0wQn7N8bc=\");\n_c = Nav;\nexport default Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["Button","Stack","useEffect","useRef","useState","jsxDEV","_jsxDEV","DETAIL_NAV","idx","name","Nav","scrollRef","_s","navIndex","setNavIndex","navRef","_scrollRef$current$na","current","scrollIntoView","behavior","changeNavBtnStyle","forEach","ref","offsetTop","window","scrollY","className","replace","addEventListener","removeEventListener","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gimjuyeong/HotelProject/HotelProject/Hotel-react/src/component/Nav.js"],"sourcesContent":["import {Button, Stack} from \"react-bootstrap\";\nimport {useEffect, useRef, useState} from \"react\";\n\nconst DETAIL_NAV = [\n    { idx: 0, name: '호텔상품' },\n    { idx: 1, name: '인기상품' },\n];\n\nlet Nav = ({scrollRef}) => {\n    const [navIndex, setNavIndex] = useState(null);\n    const navRef = useRef([]);\n\n    useEffect(() => {\n        // { behavior: 'smooth' } 속성을 주면 스크롤이 스르륵~ 올라가거나 내려가면서 이동하고, 없으면 아무 애니메이션 없이 바로 목적지를 보여준다.\n        scrollRef.current[navIndex]?.scrollIntoView({ behavior: 'smooth' });\n        setNavIndex(null);\n    }, [scrollRef, navIndex]);\n\n    // 현재 스크롤 위치에 따라 NavBar 버튼 스타일이 바뀌도록 클래스명을 지정한다.\n    useEffect(() => {\n        const changeNavBtnStyle = () => {\n            scrollRef.current.forEach((ref, idx) => {\n                if (ref.offsetTop - 180 < window.scrollY) {\n                    navRef.current.forEach(ref => {\n                        ref.className = ref.className.replace(' active', '');\n                    });\n\n                    navRef.current[idx].className += ' active';\n                }\n            });\n        };\n\n        window.addEventListener('scroll', changeNavBtnStyle);\n\n        return () => {\n            window.removeEventListener('scroll', changeNavBtnStyle);\n        };\n    }, [scrollRef]);\n\n\n    return (\n        <nav>\n            {DETAIL_NAV.map(({ idx, name }) => (\n                <Nav\n                    key={idx}\n                    ref={ref => (navRef.current[idx] = ref)}\n                    onClick={() => {\n                        setNavIndex(idx);\n                    }}\n                >\n                    {name}\n                </Nav>\n            ))}\n        </nav>\n    )\n}\n\nexport default Nav;"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,KAAK,QAAO,iBAAiB;AAC7C,SAAQC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAG,CACf;EAAEC,GAAG,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAC,EACxB;EAAED,GAAG,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAC,CAC3B;AAED,IAAIC,GAAG,GAAGA,CAAC;EAACC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMW,MAAM,GAAGZ,MAAM,CAAC,EAAE,CAAC;EAEzBD,SAAS,CAAC,MAAM;IAAA,IAAAc,qBAAA;IACZ;IACA,CAAAA,qBAAA,GAAAL,SAAS,CAACM,OAAO,CAACJ,QAAQ,CAAC,cAAAG,qBAAA,uBAA3BA,qBAAA,CAA6BE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;IACnEL,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC,EAAE,CAACH,SAAS,EAAEE,QAAQ,CAAC,CAAC;;EAEzB;EACAX,SAAS,CAAC,MAAM;IACZ,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;MAC5BT,SAAS,CAACM,OAAO,CAACI,OAAO,CAAC,CAACC,GAAG,EAAEd,GAAG,KAAK;QACpC,IAAIc,GAAG,CAACC,SAAS,GAAG,GAAG,GAAGC,MAAM,CAACC,OAAO,EAAE;UACtCV,MAAM,CAACE,OAAO,CAACI,OAAO,CAACC,GAAG,IAAI;YAC1BA,GAAG,CAACI,SAAS,GAAGJ,GAAG,CAACI,SAAS,CAACC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;UACxD,CAAC,CAAC;UAEFZ,MAAM,CAACE,OAAO,CAACT,GAAG,CAAC,CAACkB,SAAS,IAAI,SAAS;QAC9C;MACJ,CAAC,CAAC;IACN,CAAC;IAEDF,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAER,iBAAiB,CAAC;IAEpD,OAAO,MAAM;MACTI,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAET,iBAAiB,CAAC;IAC3D,CAAC;EACL,CAAC,EAAE,CAACT,SAAS,CAAC,CAAC;EAGf,oBACIL,OAAA;IAAAwB,QAAA,EACKvB,UAAU,CAACwB,GAAG,CAAC,CAAC;MAAEvB,GAAG;MAAEC;IAAK,CAAC,kBAC1BH,OAAA,CAACI,GAAG;MAEAY,GAAG,EAAEA,GAAG,IAAKP,MAAM,CAACE,OAAO,CAACT,GAAG,CAAC,GAAGc,GAAK;MACxCU,OAAO,EAAEA,CAAA,KAAM;QACXlB,WAAW,CAACN,GAAG,CAAC;MACpB,CAAE;MAAAsB,QAAA,EAEDrB;IAAI,GANAD,GAAG;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOP,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAxB,EAAA,CA/CGF,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAiDP,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}